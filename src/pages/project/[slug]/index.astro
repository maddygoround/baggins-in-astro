---
import "react-notion/src/styles.css"
import { getBlogTable, getPageBlocks } from "../../../core/blog"
import { type Project } from "../../../types/project"
import { config } from "../../../config"
import { NotionRenderer } from "react-notion"
import { getOpenGraphImageForProject } from "../../../core/og-image"
import { dateFormatter } from "../../../core/utils"
import { toNotionImageUrl } from "../../../core/notion"
import { Nav } from "../../../components/sections/nav"
import { SEO } from "astro-seo"
import { Project as ProjectCard } from "../../../components/sections/work"
import { AuthorFooter } from "../../../components/base/author-footer"
import Footer from "../../../components/sections/footer.astro"
import BaseLayout from "../../../layouts/BaseLayout.astro"

export const getStaticPaths = async () => {
  const table = await getBlogTable<Project>(config.notionProjectTableId)
  return table
    .filter((row) => row.published)
    .map((row, index) => {
      return {
        params: {
          slug: `${row.slug}`,
        },
        props: {
          project: row,
          projectIndex: index,
          publishedProjects: table.filter((p) => p.published),
        },
      }
    })
    .filter(Boolean)
}

const { slug } = Astro.params
const { project, projectIndex, publishedProjects } = Astro.props
const morePosts = [...publishedProjects, ...publishedProjects].slice(
  projectIndex + 1,
  projectIndex + 3
)

if (
  !project ||
  (!project.published && import.meta.env.NODE_ENV !== "development")
) {
  throw Error(`Failed to find post for slug: ${slug}`)
}

const blocks = await getPageBlocks(project.id)
---

<BaseLayout>
  <SEO
    slot='seo'
    title={project.title}
    description={project.preview}
    canonical={`${import.meta.env.CANONICAL_URL}/${project.slug}`}
    openGraph={{
      basic: {
        title: `${project.title} – Mahendra Rathod / Work`,
        type: "article",
        image: getOpenGraphImageForProject(project.slug).url,
        url: `${import.meta.env.CANONICAL_URL}/${Astro.url.pathname}`,
      },
      optional: {
        description: project.preview,
      },
      image: getOpenGraphImageForProject(project.slug),
      article: {
        publishedTime: new Date(project.date).toISOString(),
        tags: project.tags,
        authors: ["Mahendra Rathod"],
      },
    }}
    twitter={{
      creator: "@maddygoround1",
      card: "summary_large_image",
    }}
    titleTemplate={"%s – Mahendra Rathod / Work"}
  />
  <Nav />
  <div class='my-8 w-full max-w-3xl mx-auto px-4'>
    <h1 class='text-2xl md:text-3xl font-bold sm:text-center mb-2'>
      {project.title}
    </h1>
    <div class='sm:text-center text-gray-600'>
      <time datetime={new Date(project.date).toISOString()}>
        {dateFormatter.format(new Date(project.date))}
      </time>
    </div>
  </div>
  <article class='flex-1 my-6 post-container'>
    <NotionRenderer blockMap={blocks} mapImageUrl={toNotionImageUrl} />
  </article>
  <div class='post-container max-w-2xl my-20 text-sm'>
    <AuthorFooter />
    <div class='flex justify-between items-center'>
      <h3 class='font-bold text-gray-600 my-4 uppercase tracking-wider'>
        Continue reading
      </h3>

      <a href='/work' class='font-bold text-blue-600 my-4'>View all →</a>
    </div>
    <ul class='grid grid-cols-1 sm:grid-cols-2 gap-4'>
      {morePosts.map((p) => <ProjectCard {...p} />)}
    </ul>
  </div>
  <Footer />
</BaseLayout>
