---
import "react-notion/src/styles.css"
import { SEO } from "astro-seo"
import { NotionRenderer } from "react-notion"
import { config } from "../../config"

import { getBlogTable, getPageBlocks } from "../../core/blog"
import { dateFormatter } from "../../core/utils"
import { Post } from "../../types/blog"
import { Nav } from "../../components/sections/nav"
import { AuthorFooter } from "../../components/base/author-footer"
import Footer from "../../components/sections/footer.astro"
import { toNotionImageUrl } from "../../core/notion"
import { getOpenGraphImage } from "../../core/og-image"
import BaseLayout from "../../layouts/BaseLayout.astro"

export const getStaticPaths = async () => {
  const table = await getBlogTable<Post>(config.notionBlogTableId)
  return table
    .filter(
      (row) => import.meta.env.NODE_ENV === "development" || row.published
    )
    .map((row) => {
      return {
        params: {
          blog: `${row.slug}`,
        },
        props: {
          post: row,
        },
      }
    })
    .filter(Boolean)
}

const { blog } = Astro.params

if (!blog) {
  throw Error("No slug given")
}

const { post } = Astro.props
if (!post || (!post.published && import.meta.env.NODE_ENV !== "development")) {
  throw Error(`Failed to find post for slug: ${blog}`)
}

const blocks = await getPageBlocks(post.id)
---

<BaseLayout>
  <SEO
    slot='seo'
    title={post.title}
    description={post.preview}
    openGraph={{
      basic: {
        title: post.title,
        type: "article",
        image: getOpenGraphImage(post.title).url,
        url: `${import.meta.env.CANONICAL_URL}${Astro.url.pathname}`,
      },
      image: getOpenGraphImage(post.title),
      article: {
        publishedTime: new Date(post.date).toISOString(),
      },
    }}
    twitter={{
      creator: "@maddygoround1",
      card: "summary_large_image",
    }}
    canonical={`${import.meta.env.CANONICAL_URL}${Astro.url.pathname}`}
    titleTemplate='%s â€“ Mahendra Rathod / Blog'
  />

  <meta slot='seo' name='date' content={new Date(post.date).toDateString()} />

  <Nav />

  <div class='px-4 mt-8 mb-12 md:mt-12 md:mb-18'>
    <h1 class='mb-2 text-2xl font-bold md:text-3xl sm:text-center'>
      {post.title}
    </h1>
    <div class='text-gray-600 sm:text-center'>
      <time datetime={new Date(post.date).toISOString()}>
        {dateFormatter.format(new Date(post.date))}
      </time>
      {" / "}

      <a class='text-blue-500' href='/work'>Work</a>
    </div>
  </div>
  <article class='flex-1 w-full max-w-3xl px-4 mx-auto'>
    <NotionRenderer blockMap={blocks} mapImageUrl={toNotionImageUrl} />
  </article>
  <div class='w-full max-w-3xl px-4 mx-auto my-8'>
    <AuthorFooter />
  </div>
  <Footer />
</BaseLayout>
